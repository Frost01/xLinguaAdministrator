//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Views.SL.ModelServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasewordDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class BasewordDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentField;
        
        private int IdField;
        
        private bool IsLockedField;
        
        private Views.SL.ModelServiceReference.LanguageDto LanguageField;
        
        private string TextField;
        
        private System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> TranslationsField;
        
        private Views.SL.ModelServiceReference.WordtypeDto WordtypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Views.SL.ModelServiceReference.LanguageDto Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> Translations {
            get {
                return this.TranslationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationsField, value) != true)) {
                    this.TranslationsField = value;
                    this.RaisePropertyChanged("Translations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Views.SL.ModelServiceReference.WordtypeDto Wordtype {
            get {
                return this.WordtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WordtypeField, value) != true)) {
                    this.WordtypeField = value;
                    this.RaisePropertyChanged("Wordtype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class LanguageDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordtypeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class WordtypeDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranslationDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class TranslationDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Views.SL.ModelServiceReference.BasewordDto BasewordField;
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Views.SL.ModelServiceReference.BasewordDto Baseword {
            get {
                return this.BasewordField;
            }
            set {
                if ((object.ReferenceEquals(this.BasewordField, value) != true)) {
                    this.BasewordField = value;
                    this.RaisePropertyChanged("Baseword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModelServiceReference.IModelService")]
    public interface IModelService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/GetBasewordsByTextOrId", ReplyAction="http://tempuri.org/IModelService/GetBasewordsByTextOrIdResponse")]
        System.IAsyncResult BeginGetBasewordsByTextOrId(string text, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> EndGetBasewordsByTextOrId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/GetSupportedLanguages", ReplyAction="http://tempuri.org/IModelService/GetSupportedLanguagesResponse")]
        System.IAsyncResult BeginGetSupportedLanguages(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> EndGetSupportedLanguages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/GetWordtypes", ReplyAction="http://tempuri.org/IModelService/GetWordtypesResponse")]
        System.IAsyncResult BeginGetWordtypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> EndGetWordtypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/UpdateBaseword", ReplyAction="http://tempuri.org/IModelService/UpdateBasewordResponse")]
        System.IAsyncResult BeginUpdateBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateBaseword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/DeleteBaseword", ReplyAction="http://tempuri.org/IModelService/DeleteBasewordResponse")]
        System.IAsyncResult BeginDeleteBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteBaseword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IModelService/GetTranslationsFromBaseword", ReplyAction="http://tempuri.org/IModelService/GetTranslationsFromBasewordResponse")]
        System.IAsyncResult BeginGetTranslationsFromBaseword(Views.SL.ModelServiceReference.BasewordDto basewordDto, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> EndGetTranslationsFromBaseword(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelServiceChannel : Views.SL.ModelServiceReference.IModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBasewordsByTextOrIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBasewordsByTextOrIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSupportedLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupportedLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWordtypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWordtypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateBasewordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateBasewordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBasewordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBasewordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTranslationsFromBasewordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTranslationsFromBasewordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelServiceClient : System.ServiceModel.ClientBase<Views.SL.ModelServiceReference.IModelService>, Views.SL.ModelServiceReference.IModelService {
        
        private BeginOperationDelegate onBeginGetBasewordsByTextOrIdDelegate;
        
        private EndOperationDelegate onEndGetBasewordsByTextOrIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetBasewordsByTextOrIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSupportedLanguagesDelegate;
        
        private EndOperationDelegate onEndGetSupportedLanguagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupportedLanguagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWordtypesDelegate;
        
        private EndOperationDelegate onEndGetWordtypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetWordtypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBasewordDelegate;
        
        private EndOperationDelegate onEndUpdateBasewordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBasewordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBasewordDelegate;
        
        private EndOperationDelegate onEndDeleteBasewordDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBasewordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTranslationsFromBasewordDelegate;
        
        private EndOperationDelegate onEndGetTranslationsFromBasewordDelegate;
        
        private System.Threading.SendOrPostCallback onGetTranslationsFromBasewordCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ModelServiceClient() {
        }
        
        public ModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetBasewordsByTextOrIdCompletedEventArgs> GetBasewordsByTextOrIdCompleted;
        
        public event System.EventHandler<GetSupportedLanguagesCompletedEventArgs> GetSupportedLanguagesCompleted;
        
        public event System.EventHandler<GetWordtypesCompletedEventArgs> GetWordtypesCompleted;
        
        public event System.EventHandler<UpdateBasewordCompletedEventArgs> UpdateBasewordCompleted;
        
        public event System.EventHandler<DeleteBasewordCompletedEventArgs> DeleteBasewordCompleted;
        
        public event System.EventHandler<GetTranslationsFromBasewordCompletedEventArgs> GetTranslationsFromBasewordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginGetBasewordsByTextOrId(string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBasewordsByTextOrId(text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> Views.SL.ModelServiceReference.IModelService.EndGetBasewordsByTextOrId(System.IAsyncResult result) {
            return base.Channel.EndGetBasewordsByTextOrId(result);
        }
        
        private System.IAsyncResult OnBeginGetBasewordsByTextOrId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string text = ((string)(inValues[0]));
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginGetBasewordsByTextOrId(text, callback, asyncState);
        }
        
        private object[] OnEndGetBasewordsByTextOrId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndGetBasewordsByTextOrId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBasewordsByTextOrIdCompleted(object state) {
            if ((this.GetBasewordsByTextOrIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBasewordsByTextOrIdCompleted(this, new GetBasewordsByTextOrIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBasewordsByTextOrIdAsync(string text) {
            this.GetBasewordsByTextOrIdAsync(text, null);
        }
        
        public void GetBasewordsByTextOrIdAsync(string text, object userState) {
            if ((this.onBeginGetBasewordsByTextOrIdDelegate == null)) {
                this.onBeginGetBasewordsByTextOrIdDelegate = new BeginOperationDelegate(this.OnBeginGetBasewordsByTextOrId);
            }
            if ((this.onEndGetBasewordsByTextOrIdDelegate == null)) {
                this.onEndGetBasewordsByTextOrIdDelegate = new EndOperationDelegate(this.OnEndGetBasewordsByTextOrId);
            }
            if ((this.onGetBasewordsByTextOrIdCompletedDelegate == null)) {
                this.onGetBasewordsByTextOrIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBasewordsByTextOrIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetBasewordsByTextOrIdDelegate, new object[] {
                        text}, this.onEndGetBasewordsByTextOrIdDelegate, this.onGetBasewordsByTextOrIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginGetSupportedLanguages(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupportedLanguages(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> Views.SL.ModelServiceReference.IModelService.EndGetSupportedLanguages(System.IAsyncResult result) {
            return base.Channel.EndGetSupportedLanguages(result);
        }
        
        private System.IAsyncResult OnBeginGetSupportedLanguages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginGetSupportedLanguages(callback, asyncState);
        }
        
        private object[] OnEndGetSupportedLanguages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndGetSupportedLanguages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupportedLanguagesCompleted(object state) {
            if ((this.GetSupportedLanguagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupportedLanguagesCompleted(this, new GetSupportedLanguagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupportedLanguagesAsync() {
            this.GetSupportedLanguagesAsync(null);
        }
        
        public void GetSupportedLanguagesAsync(object userState) {
            if ((this.onBeginGetSupportedLanguagesDelegate == null)) {
                this.onBeginGetSupportedLanguagesDelegate = new BeginOperationDelegate(this.OnBeginGetSupportedLanguages);
            }
            if ((this.onEndGetSupportedLanguagesDelegate == null)) {
                this.onEndGetSupportedLanguagesDelegate = new EndOperationDelegate(this.OnEndGetSupportedLanguages);
            }
            if ((this.onGetSupportedLanguagesCompletedDelegate == null)) {
                this.onGetSupportedLanguagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupportedLanguagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupportedLanguagesDelegate, null, this.onEndGetSupportedLanguagesDelegate, this.onGetSupportedLanguagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginGetWordtypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWordtypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> Views.SL.ModelServiceReference.IModelService.EndGetWordtypes(System.IAsyncResult result) {
            return base.Channel.EndGetWordtypes(result);
        }
        
        private System.IAsyncResult OnBeginGetWordtypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginGetWordtypes(callback, asyncState);
        }
        
        private object[] OnEndGetWordtypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndGetWordtypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWordtypesCompleted(object state) {
            if ((this.GetWordtypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWordtypesCompleted(this, new GetWordtypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWordtypesAsync() {
            this.GetWordtypesAsync(null);
        }
        
        public void GetWordtypesAsync(object userState) {
            if ((this.onBeginGetWordtypesDelegate == null)) {
                this.onBeginGetWordtypesDelegate = new BeginOperationDelegate(this.OnBeginGetWordtypes);
            }
            if ((this.onEndGetWordtypesDelegate == null)) {
                this.onEndGetWordtypesDelegate = new EndOperationDelegate(this.OnEndGetWordtypes);
            }
            if ((this.onGetWordtypesCompletedDelegate == null)) {
                this.onGetWordtypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWordtypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetWordtypesDelegate, null, this.onEndGetWordtypesDelegate, this.onGetWordtypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginUpdateBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBaseword(baseword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Views.SL.ModelServiceReference.IModelService.EndUpdateBaseword(System.IAsyncResult result) {
            return base.Channel.EndUpdateBaseword(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBaseword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Views.SL.ModelServiceReference.BasewordDto baseword = ((Views.SL.ModelServiceReference.BasewordDto)(inValues[0]));
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginUpdateBaseword(baseword, callback, asyncState);
        }
        
        private object[] OnEndUpdateBaseword(System.IAsyncResult result) {
            bool retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndUpdateBaseword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateBasewordCompleted(object state) {
            if ((this.UpdateBasewordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBasewordCompleted(this, new UpdateBasewordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBasewordAsync(Views.SL.ModelServiceReference.BasewordDto baseword) {
            this.UpdateBasewordAsync(baseword, null);
        }
        
        public void UpdateBasewordAsync(Views.SL.ModelServiceReference.BasewordDto baseword, object userState) {
            if ((this.onBeginUpdateBasewordDelegate == null)) {
                this.onBeginUpdateBasewordDelegate = new BeginOperationDelegate(this.OnBeginUpdateBaseword);
            }
            if ((this.onEndUpdateBasewordDelegate == null)) {
                this.onEndUpdateBasewordDelegate = new EndOperationDelegate(this.OnEndUpdateBaseword);
            }
            if ((this.onUpdateBasewordCompletedDelegate == null)) {
                this.onUpdateBasewordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBasewordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBasewordDelegate, new object[] {
                        baseword}, this.onEndUpdateBasewordDelegate, this.onUpdateBasewordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginDeleteBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBaseword(baseword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Views.SL.ModelServiceReference.IModelService.EndDeleteBaseword(System.IAsyncResult result) {
            return base.Channel.EndDeleteBaseword(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBaseword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Views.SL.ModelServiceReference.BasewordDto baseword = ((Views.SL.ModelServiceReference.BasewordDto)(inValues[0]));
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginDeleteBaseword(baseword, callback, asyncState);
        }
        
        private object[] OnEndDeleteBaseword(System.IAsyncResult result) {
            bool retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndDeleteBaseword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBasewordCompleted(object state) {
            if ((this.DeleteBasewordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBasewordCompleted(this, new DeleteBasewordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBasewordAsync(Views.SL.ModelServiceReference.BasewordDto baseword) {
            this.DeleteBasewordAsync(baseword, null);
        }
        
        public void DeleteBasewordAsync(Views.SL.ModelServiceReference.BasewordDto baseword, object userState) {
            if ((this.onBeginDeleteBasewordDelegate == null)) {
                this.onBeginDeleteBasewordDelegate = new BeginOperationDelegate(this.OnBeginDeleteBaseword);
            }
            if ((this.onEndDeleteBasewordDelegate == null)) {
                this.onEndDeleteBasewordDelegate = new EndOperationDelegate(this.OnEndDeleteBaseword);
            }
            if ((this.onDeleteBasewordCompletedDelegate == null)) {
                this.onDeleteBasewordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBasewordCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBasewordDelegate, new object[] {
                        baseword}, this.onEndDeleteBasewordDelegate, this.onDeleteBasewordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Views.SL.ModelServiceReference.IModelService.BeginGetTranslationsFromBaseword(Views.SL.ModelServiceReference.BasewordDto basewordDto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTranslationsFromBaseword(basewordDto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> Views.SL.ModelServiceReference.IModelService.EndGetTranslationsFromBaseword(System.IAsyncResult result) {
            return base.Channel.EndGetTranslationsFromBaseword(result);
        }
        
        private System.IAsyncResult OnBeginGetTranslationsFromBaseword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Views.SL.ModelServiceReference.BasewordDto basewordDto = ((Views.SL.ModelServiceReference.BasewordDto)(inValues[0]));
            return ((Views.SL.ModelServiceReference.IModelService)(this)).BeginGetTranslationsFromBaseword(basewordDto, callback, asyncState);
        }
        
        private object[] OnEndGetTranslationsFromBaseword(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> retVal = ((Views.SL.ModelServiceReference.IModelService)(this)).EndGetTranslationsFromBaseword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTranslationsFromBasewordCompleted(object state) {
            if ((this.GetTranslationsFromBasewordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTranslationsFromBasewordCompleted(this, new GetTranslationsFromBasewordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTranslationsFromBasewordAsync(Views.SL.ModelServiceReference.BasewordDto basewordDto) {
            this.GetTranslationsFromBasewordAsync(basewordDto, null);
        }
        
        public void GetTranslationsFromBasewordAsync(Views.SL.ModelServiceReference.BasewordDto basewordDto, object userState) {
            if ((this.onBeginGetTranslationsFromBasewordDelegate == null)) {
                this.onBeginGetTranslationsFromBasewordDelegate = new BeginOperationDelegate(this.OnBeginGetTranslationsFromBaseword);
            }
            if ((this.onEndGetTranslationsFromBasewordDelegate == null)) {
                this.onEndGetTranslationsFromBasewordDelegate = new EndOperationDelegate(this.OnEndGetTranslationsFromBaseword);
            }
            if ((this.onGetTranslationsFromBasewordCompletedDelegate == null)) {
                this.onGetTranslationsFromBasewordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTranslationsFromBasewordCompleted);
            }
            base.InvokeAsync(this.onBeginGetTranslationsFromBasewordDelegate, new object[] {
                        basewordDto}, this.onEndGetTranslationsFromBasewordDelegate, this.onGetTranslationsFromBasewordCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Views.SL.ModelServiceReference.IModelService CreateChannel() {
            return new ModelServiceClientChannel(this);
        }
        
        private class ModelServiceClientChannel : ChannelBase<Views.SL.ModelServiceReference.IModelService>, Views.SL.ModelServiceReference.IModelService {
            
            public ModelServiceClientChannel(System.ServiceModel.ClientBase<Views.SL.ModelServiceReference.IModelService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBasewordsByTextOrId(string text, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = text;
                System.IAsyncResult _result = base.BeginInvoke("GetBasewordsByTextOrId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> EndGetBasewordsByTextOrId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.BasewordDto>)(base.EndInvoke("GetBasewordsByTextOrId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSupportedLanguages(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSupportedLanguages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> EndGetSupportedLanguages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.LanguageDto>)(base.EndInvoke("GetSupportedLanguages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWordtypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWordtypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> EndGetWordtypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.WordtypeDto>)(base.EndInvoke("GetWordtypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = baseword;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBaseword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateBaseword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateBaseword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteBaseword(Views.SL.ModelServiceReference.BasewordDto baseword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = baseword;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBaseword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteBaseword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteBaseword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTranslationsFromBaseword(Views.SL.ModelServiceReference.BasewordDto basewordDto, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = basewordDto;
                System.IAsyncResult _result = base.BeginInvoke("GetTranslationsFromBaseword", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> EndGetTranslationsFromBaseword(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Views.SL.ModelServiceReference.TranslationDto>)(base.EndInvoke("GetTranslationsFromBaseword", _args, result)));
                return _result;
            }
        }
    }
}
