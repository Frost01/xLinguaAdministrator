//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "fk_abbreviation", "abbreviations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Models.EF.Abbreviation), "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Baseword), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "complexphrases_fk", "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Baseword), "complexphrases", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Complexphras), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "fk_specifics", "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Models.EF.Baseword), "basicwordspecifics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Basewordspecific), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_baseword", "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Baseword), "connections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Connection), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_languages", "languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Language), "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Baseword), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_translation_basicword", "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Baseword), "translations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Translation), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_types", "types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Wordtype), "basewords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Baseword), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_basicword", "specifics", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Models.EF.Specific), "basicwordspecifics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Basewordspecific), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_function_types", "types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Wordtype), "functions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Gramfunction), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "ref_functions_languages", "languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Language), "functions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Gramfunction), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "FlexionConnection", "Flexion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Flexion), "Connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Connection), true)]
[assembly: EdmRelationshipAttribute("xLingua_StagingModel", "BasewordTranslation", "Baseword", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.EF.Baseword), "Translation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.EF.Translation), true)]

#endregion

namespace Models.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class xLingua_StagingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new xLingua_StagingEntities object using the connection string found in the 'xLingua_StagingEntities' section of the application configuration file.
        /// </summary>
        public xLingua_StagingEntities() : base("name=xLingua_StagingEntities", "xLingua_StagingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new xLingua_StagingEntities object.
        /// </summary>
        public xLingua_StagingEntities(string connectionString) : base(connectionString, "xLingua_StagingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new xLingua_StagingEntities object.
        /// </summary>
        public xLingua_StagingEntities(EntityConnection connection) : base(connection, "xLingua_StagingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Abbreviation> Abbreviations1
        {
            get
            {
                if ((_Abbreviations1 == null))
                {
                    _Abbreviations1 = base.CreateObjectSet<Abbreviation>("Abbreviations1");
                }
                return _Abbreviations1;
            }
        }
        private ObjectSet<Abbreviation> _Abbreviations1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Baseword> Basewords1
        {
            get
            {
                if ((_Basewords1 == null))
                {
                    _Basewords1 = base.CreateObjectSet<Baseword>("Basewords1");
                }
                return _Basewords1;
            }
        }
        private ObjectSet<Baseword> _Basewords1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Basewordspecific> Basewordspecifics
        {
            get
            {
                if ((_Basewordspecifics == null))
                {
                    _Basewordspecifics = base.CreateObjectSet<Basewordspecific>("Basewordspecifics");
                }
                return _Basewordspecifics;
            }
        }
        private ObjectSet<Basewordspecific> _Basewordspecifics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Complexphras> complexphrases
        {
            get
            {
                if ((_complexphrases == null))
                {
                    _complexphrases = base.CreateObjectSet<Complexphras>("complexphrases");
                }
                return _complexphrases;
            }
        }
        private ObjectSet<Complexphras> _complexphrases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Connection> Connections1
        {
            get
            {
                if ((_Connections1 == null))
                {
                    _Connections1 = base.CreateObjectSet<Connection>("Connections1");
                }
                return _Connections1;
            }
        }
        private ObjectSet<Connection> _Connections1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gramfunction> Gramfunctions
        {
            get
            {
                if ((_Gramfunctions == null))
                {
                    _Gramfunctions = base.CreateObjectSet<Gramfunction>("Gramfunctions");
                }
                return _Gramfunctions;
            }
        }
        private ObjectSet<Gramfunction> _Gramfunctions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages1
        {
            get
            {
                if ((_Languages1 == null))
                {
                    _Languages1 = base.CreateObjectSet<Language>("Languages1");
                }
                return _Languages1;
            }
        }
        private ObjectSet<Language> _Languages1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specific> Specifics1
        {
            get
            {
                if ((_Specifics1 == null))
                {
                    _Specifics1 = base.CreateObjectSet<Specific>("Specifics1");
                }
                return _Specifics1;
            }
        }
        private ObjectSet<Specific> _Specifics1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Translation> Translations1
        {
            get
            {
                if ((_Translations1 == null))
                {
                    _Translations1 = base.CreateObjectSet<Translation>("Translations1");
                }
                return _Translations1;
            }
        }
        private ObjectSet<Translation> _Translations1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wordtype> Wordtypes
        {
            get
            {
                if ((_Wordtypes == null))
                {
                    _Wordtypes = base.CreateObjectSet<Wordtype>("Wordtypes");
                }
                return _Wordtypes;
            }
        }
        private ObjectSet<Wordtype> _Wordtypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flexion> Flexions
        {
            get
            {
                if ((_Flexions == null))
                {
                    _Flexions = base.CreateObjectSet<Flexion>("Flexions");
                }
                return _Flexions;
            }
        }
        private ObjectSet<Flexion> _Flexions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users1
        {
            get
            {
                if ((_Users1 == null))
                {
                    _Users1 = base.CreateObjectSet<User>("Users1");
                }
                return _Users1;
            }
        }
        private ObjectSet<User> _Users1;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Abbreviations1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAbbreviations1(Abbreviation abbreviation)
        {
            base.AddObject("Abbreviations1", abbreviation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Basewords1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBasewords1(Baseword baseword)
        {
            base.AddObject("Basewords1", baseword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Basewordspecifics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBasewordspecifics(Basewordspecific basewordspecific)
        {
            base.AddObject("Basewordspecifics", basewordspecific);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the complexphrases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocomplexphrases(Complexphras complexphras)
        {
            base.AddObject("complexphrases", complexphras);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Connections1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConnections1(Connection connection)
        {
            base.AddObject("Connections1", connection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gramfunctions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGramfunctions(Gramfunction gramfunction)
        {
            base.AddObject("Gramfunctions", gramfunction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages1(Language language)
        {
            base.AddObject("Languages1", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specifics1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecifics1(Specific specific)
        {
            base.AddObject("Specifics1", specific);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Translations1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTranslations1(Translation translation)
        {
            base.AddObject("Translations1", translation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wordtypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordtypes(Wordtype wordtype)
        {
            base.AddObject("Wordtypes", wordtype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flexions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlexions(Flexion flexion)
        {
            base.AddObject("Flexions", flexion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers1(User user)
        {
            base.AddObject("Users1", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Abbreviation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Abbreviation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Abbreviation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Abbreviation CreateAbbreviation(global::System.Int32 id, global::System.String text)
        {
            Abbreviation abbreviation = new Abbreviation();
            abbreviation.Id = id;
            abbreviation.Text = text;
            return abbreviation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "fk_abbreviation", "basewords")]
        public EntityCollection<Baseword> Basewords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Baseword>("xLingua_StagingModel.fk_abbreviation", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Baseword>("xLingua_StagingModel.fk_abbreviation", "basewords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Baseword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Baseword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Baseword object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="wordtypeId">Initial value of the WordtypeId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="referenceNumber">Initial value of the ReferenceNumber property.</param>
        public static Baseword CreateBaseword(global::System.Int32 id, global::System.Int32 languageId, global::System.Int32 wordtypeId, global::System.String text, global::System.Int64 referenceNumber)
        {
            Baseword baseword = new Baseword();
            baseword.Id = id;
            baseword.LanguageId = languageId;
            baseword.WordtypeId = wordtypeId;
            baseword.Text = text;
            baseword.ReferenceNumber = referenceNumber;
            return baseword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordtypeId
        {
            get
            {
                return _WordtypeId;
            }
            set
            {
                OnWordtypeIdChanging(value);
                ReportPropertyChanging("WordtypeId");
                _WordtypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordtypeId");
                OnWordtypeIdChanged();
            }
        }
        private global::System.Int32 _WordtypeId;
        partial void OnWordtypeIdChanging(global::System.Int32 value);
        partial void OnWordtypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AbbrevationId
        {
            get
            {
                return _AbbrevationId;
            }
            set
            {
                OnAbbrevationIdChanging(value);
                ReportPropertyChanging("AbbrevationId");
                _AbbrevationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AbbrevationId");
                OnAbbrevationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AbbrevationId;
        partial void OnAbbrevationIdChanging(Nullable<global::System.Int32> value);
        partial void OnAbbrevationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ReferenceNumber
        {
            get
            {
                return _ReferenceNumber;
            }
            set
            {
                OnReferenceNumberChanging(value);
                ReportPropertyChanging("ReferenceNumber");
                _ReferenceNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceNumber");
                OnReferenceNumberChanged();
            }
        }
        private global::System.Int64 _ReferenceNumber;
        partial void OnReferenceNumberChanging(global::System.Int64 value);
        partial void OnReferenceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "fk_abbreviation", "abbreviations")]
        public Abbreviation Abbreviation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abbreviation>("xLingua_StagingModel.fk_abbreviation", "abbreviations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abbreviation>("xLingua_StagingModel.fk_abbreviation", "abbreviations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Abbreviation> AbbreviationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Abbreviation>("xLingua_StagingModel.fk_abbreviation", "abbreviations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Abbreviation>("xLingua_StagingModel.fk_abbreviation", "abbreviations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "complexphrases_fk", "complexphrases")]
        public EntityCollection<Complexphras> Complexphrases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Complexphras>("xLingua_StagingModel.complexphrases_fk", "complexphrases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Complexphras>("xLingua_StagingModel.complexphrases_fk", "complexphrases", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "fk_specifics", "basicwordspecifics")]
        public EntityCollection<Basewordspecific> Basewordspecifics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Basewordspecific>("xLingua_StagingModel.fk_specifics", "basicwordspecifics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Basewordspecific>("xLingua_StagingModel.fk_specifics", "basicwordspecifics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_baseword", "connections")]
        public EntityCollection<Connection> Connections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connection>("xLingua_StagingModel.ref_baseword", "connections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connection>("xLingua_StagingModel.ref_baseword", "connections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_languages", "languages")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_languages", "languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_languages", "languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_languages", "languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("xLingua_StagingModel.ref_languages", "languages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_translation_basicword", "translations")]
        public EntityCollection<Translation> Translations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Translation>("xLingua_StagingModel.ref_translation_basicword", "translations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Translation>("xLingua_StagingModel.ref_translation_basicword", "translations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_types", "types")]
        public Wordtype Wordtype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_types", "types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_types", "types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wordtype> WordtypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_types", "types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wordtype>("xLingua_StagingModel.ref_types", "types", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "BasewordTranslation", "Translation")]
        public EntityCollection<Translation> Translations_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Translation>("xLingua_StagingModel.BasewordTranslation", "Translation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Translation>("xLingua_StagingModel.BasewordTranslation", "Translation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Basewordspecific")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Basewordspecific : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Basewordspecific object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Basewordspecific CreateBasewordspecific(global::System.Int32 id)
        {
            Basewordspecific basewordspecific = new Basewordspecific();
            basewordspecific.Id = id;
            return basewordspecific;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BasewordId
        {
            get
            {
                return _BasewordId;
            }
            set
            {
                OnBasewordIdChanging(value);
                ReportPropertyChanging("BasewordId");
                _BasewordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BasewordId");
                OnBasewordIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BasewordId;
        partial void OnBasewordIdChanging(Nullable<global::System.Int32> value);
        partial void OnBasewordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecificId
        {
            get
            {
                return _SpecificId;
            }
            set
            {
                OnSpecificIdChanging(value);
                ReportPropertyChanging("SpecificId");
                _SpecificId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecificId");
                OnSpecificIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecificId;
        partial void OnSpecificIdChanging(Nullable<global::System.Int32> value);
        partial void OnSpecificIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "fk_specifics", "basewords")]
        public Baseword Baseword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.fk_specifics", "basewords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.fk_specifics", "basewords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Baseword> BasewordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.fk_specifics", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Baseword>("xLingua_StagingModel.fk_specifics", "basewords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_basicword", "specifics")]
        public Specific Specific
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specific>("xLingua_StagingModel.ref_basicword", "specifics").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specific>("xLingua_StagingModel.ref_basicword", "specifics").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specific> SpecificReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specific>("xLingua_StagingModel.ref_basicword", "specifics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specific>("xLingua_StagingModel.ref_basicword", "specifics", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Complexphras")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Complexphras : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Complexphras object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="basewordId">Initial value of the BasewordId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static Complexphras CreateComplexphras(global::System.Int32 id, global::System.Int32 basewordId, global::System.Int32 languageId)
        {
            Complexphras complexphras = new Complexphras();
            complexphras.Id = id;
            complexphras.BasewordId = basewordId;
            complexphras.LanguageId = languageId;
            return complexphras;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BasewordId
        {
            get
            {
                return _BasewordId;
            }
            set
            {
                OnBasewordIdChanging(value);
                ReportPropertyChanging("BasewordId");
                _BasewordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BasewordId");
                OnBasewordIdChanged();
            }
        }
        private global::System.Int32 _BasewordId;
        partial void OnBasewordIdChanging(global::System.Int32 value);
        partial void OnBasewordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "complexphrases_fk", "basewords")]
        public Baseword Baseword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.complexphrases_fk", "basewords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.complexphrases_fk", "basewords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Baseword> BasewordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.complexphrases_fk", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Baseword>("xLingua_StagingModel.complexphrases_fk", "basewords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Connection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Connection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Connection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="basewordId">Initial value of the BasewordId property.</param>
        /// <param name="gramfunctionId">Initial value of the GramfunctionId property.</param>
        /// <param name="flexionId">Initial value of the FlexionId property.</param>
        public static Connection CreateConnection(global::System.Int64 id, global::System.Int32 basewordId, global::System.Int64 gramfunctionId, global::System.Int64 flexionId)
        {
            Connection connection = new Connection();
            connection.Id = id;
            connection.BasewordId = basewordId;
            connection.GramfunctionId = gramfunctionId;
            connection.FlexionId = flexionId;
            return connection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BasewordId
        {
            get
            {
                return _BasewordId;
            }
            set
            {
                OnBasewordIdChanging(value);
                ReportPropertyChanging("BasewordId");
                _BasewordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BasewordId");
                OnBasewordIdChanged();
            }
        }
        private global::System.Int32 _BasewordId;
        partial void OnBasewordIdChanging(global::System.Int32 value);
        partial void OnBasewordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GramfunctionId
        {
            get
            {
                return _GramfunctionId;
            }
            set
            {
                OnGramfunctionIdChanging(value);
                ReportPropertyChanging("GramfunctionId");
                _GramfunctionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GramfunctionId");
                OnGramfunctionIdChanged();
            }
        }
        private global::System.Int64 _GramfunctionId;
        partial void OnGramfunctionIdChanging(global::System.Int64 value);
        partial void OnGramfunctionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FlexionId
        {
            get
            {
                return _FlexionId;
            }
            set
            {
                OnFlexionIdChanging(value);
                ReportPropertyChanging("FlexionId");
                _FlexionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlexionId");
                OnFlexionIdChanged();
            }
        }
        private global::System.Int64 _FlexionId;
        partial void OnFlexionIdChanging(global::System.Int64 value);
        partial void OnFlexionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_baseword", "basewords")]
        public Baseword Baseword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_baseword", "basewords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_baseword", "basewords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Baseword> BasewordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_baseword", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Baseword>("xLingua_StagingModel.ref_baseword", "basewords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "FlexionConnection", "Flexion")]
        public Flexion Flexion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flexion>("xLingua_StagingModel.FlexionConnection", "Flexion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flexion>("xLingua_StagingModel.FlexionConnection", "Flexion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flexion> FlexionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flexion>("xLingua_StagingModel.FlexionConnection", "Flexion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flexion>("xLingua_StagingModel.FlexionConnection", "Flexion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Flexion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flexion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flexion object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Flexion CreateFlexion(global::System.Int64 id)
        {
            Flexion flexion = new Flexion();
            flexion.Id = id;
            return flexion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "FlexionConnection", "Connection")]
        public EntityCollection<Connection> Connections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connection>("xLingua_StagingModel.FlexionConnection", "Connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connection>("xLingua_StagingModel.FlexionConnection", "Connection", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Gramfunction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gramfunction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gramfunction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="wordtypeId">Initial value of the WordtypeId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        public static Gramfunction CreateGramfunction(global::System.Int32 id, global::System.String text, global::System.Int32 wordtypeId, global::System.Int32 languageId)
        {
            Gramfunction gramfunction = new Gramfunction();
            gramfunction.Id = id;
            gramfunction.Text = text;
            gramfunction.WordtypeId = wordtypeId;
            gramfunction.LanguageId = languageId;
            return gramfunction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WordtypeId
        {
            get
            {
                return _WordtypeId;
            }
            set
            {
                OnWordtypeIdChanging(value);
                ReportPropertyChanging("WordtypeId");
                _WordtypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordtypeId");
                OnWordtypeIdChanged();
            }
        }
        private global::System.Int32 _WordtypeId;
        partial void OnWordtypeIdChanging(global::System.Int32 value);
        partial void OnWordtypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_function_types", "types")]
        public Wordtype Wordtype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_function_types", "types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_function_types", "types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wordtype> WordtypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wordtype>("xLingua_StagingModel.ref_function_types", "types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wordtype>("xLingua_StagingModel.ref_function_types", "types", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_functions_languages", "languages")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_functions_languages", "languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_functions_languages", "languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("xLingua_StagingModel.ref_functions_languages", "languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("xLingua_StagingModel.ref_functions_languages", "languages", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Language CreateLanguage(global::System.Int32 id)
        {
            Language language = new Language();
            language.Id = id;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NativeName
        {
            get
            {
                return _NativeName;
            }
            set
            {
                OnNativeNameChanging(value);
                ReportPropertyChanging("NativeName");
                _NativeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NativeName");
                OnNativeNameChanged();
            }
        }
        private global::System.String _NativeName;
        partial void OnNativeNameChanging(global::System.String value);
        partial void OnNativeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnglishName
        {
            get
            {
                return _EnglishName;
            }
            set
            {
                OnEnglishNameChanging(value);
                ReportPropertyChanging("EnglishName");
                _EnglishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnglishName");
                OnEnglishNameChanged();
            }
        }
        private global::System.String _EnglishName;
        partial void OnEnglishNameChanging(global::System.String value);
        partial void OnEnglishNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CultureName
        {
            get
            {
                return _CultureName;
            }
            set
            {
                OnCultureNameChanging(value);
                ReportPropertyChanging("CultureName");
                _CultureName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CultureName");
                OnCultureNameChanged();
            }
        }
        private global::System.String _CultureName;
        partial void OnCultureNameChanging(global::System.String value);
        partial void OnCultureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInterface
        {
            get
            {
                return _IsInterface;
            }
            set
            {
                OnIsInterfaceChanging(value);
                ReportPropertyChanging("IsInterface");
                _IsInterface = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInterface");
                OnIsInterfaceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInterface;
        partial void OnIsInterfaceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInterfaceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_languages", "basewords")]
        public EntityCollection<Baseword> Basewords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Baseword>("xLingua_StagingModel.ref_languages", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Baseword>("xLingua_StagingModel.ref_languages", "basewords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_functions_languages", "functions")]
        public EntityCollection<Gramfunction> Gramfunctions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gramfunction>("xLingua_StagingModel.ref_functions_languages", "functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gramfunction>("xLingua_StagingModel.ref_functions_languages", "functions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Specific")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specific : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specific object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Specific CreateSpecific(global::System.Int32 id, global::System.String text)
        {
            Specific specific = new Specific();
            specific.Id = id;
            specific.Text = text;
            return specific;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LanguageId;
        partial void OnLanguageIdChanging(Nullable<global::System.Int32> value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WordtypeId
        {
            get
            {
                return _WordtypeId;
            }
            set
            {
                OnWordtypeIdChanging(value);
                ReportPropertyChanging("WordtypeId");
                _WordtypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WordtypeId");
                OnWordtypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WordtypeId;
        partial void OnWordtypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnWordtypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_basicword", "basicwordspecifics")]
        public EntityCollection<Basewordspecific> Basewordspecifics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Basewordspecific>("xLingua_StagingModel.ref_basicword", "basicwordspecifics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Basewordspecific>("xLingua_StagingModel.ref_basicword", "basicwordspecifics", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Translation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Translation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Translation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="basewordFromId">Initial value of the BasewordFromId property.</param>
        /// <param name="basewordToId">Initial value of the BasewordToId property.</param>
        public static Translation CreateTranslation(global::System.Int32 id, global::System.Int32 basewordFromId, global::System.Int32 basewordToId)
        {
            Translation translation = new Translation();
            translation.Id = id;
            translation.BasewordFromId = basewordFromId;
            translation.BasewordToId = basewordToId;
            return translation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BasewordFromId
        {
            get
            {
                return _BasewordFromId;
            }
            set
            {
                OnBasewordFromIdChanging(value);
                ReportPropertyChanging("BasewordFromId");
                _BasewordFromId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BasewordFromId");
                OnBasewordFromIdChanged();
            }
        }
        private global::System.Int32 _BasewordFromId;
        partial void OnBasewordFromIdChanging(global::System.Int32 value);
        partial void OnBasewordFromIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BasewordToId
        {
            get
            {
                return _BasewordToId;
            }
            set
            {
                OnBasewordToIdChanging(value);
                ReportPropertyChanging("BasewordToId");
                _BasewordToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BasewordToId");
                OnBasewordToIdChanged();
            }
        }
        private global::System.Int32 _BasewordToId;
        partial void OnBasewordToIdChanging(global::System.Int32 value);
        partial void OnBasewordToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_translation_basicword", "basewords")]
        public Baseword Baseword
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_translation_basicword", "basewords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_translation_basicword", "basewords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Baseword> BasewordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.ref_translation_basicword", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Baseword>("xLingua_StagingModel.ref_translation_basicword", "basewords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "BasewordTranslation", "Baseword")]
        public Baseword BasewordTranslation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.BasewordTranslation", "Baseword").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.BasewordTranslation", "Baseword").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Baseword> BasewordTranslationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Baseword>("xLingua_StagingModel.BasewordTranslation", "Baseword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Baseword>("xLingua_StagingModel.BasewordTranslation", "Baseword", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static User CreateUser(global::System.Int64 id)
        {
            User user = new User();
            user.Id = id;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xLingua_StagingModel", Name="Wordtype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wordtype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wordtype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Wordtype CreateWordtype(global::System.Int32 id, global::System.String text)
        {
            Wordtype wordtype = new Wordtype();
            wordtype.Id = id;
            wordtype.Text = text;
            return wordtype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_types", "basewords")]
        public EntityCollection<Baseword> Basewords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Baseword>("xLingua_StagingModel.ref_types", "basewords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Baseword>("xLingua_StagingModel.ref_types", "basewords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xLingua_StagingModel", "ref_function_types", "functions")]
        public EntityCollection<Gramfunction> Gramfunctions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gramfunction>("xLingua_StagingModel.ref_function_types", "functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gramfunction>("xLingua_StagingModel.ref_function_types", "functions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
